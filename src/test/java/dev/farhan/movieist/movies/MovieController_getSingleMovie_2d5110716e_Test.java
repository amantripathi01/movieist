// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package dev.farhan.movieist.movies;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

public class MovieController_getSingleMovie_2d5110716e_Test {

    @InjectMocks
    MovieController movieController;

    @Mock
    MovieService movieService;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetSingleMovieSuccess() {
        Movie movie = new Movie();
        movie.setImdbId("tt1234567");
        when(movieService.findMovieByImdbId("tt1234567")).thenReturn(Optional.of(movie));

        ResponseEntity<Optional<Movie>> responseEntity = movieController.getSingleMovie("tt1234567");
        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        assertEquals("tt1234567", responseEntity.getBody().get().getImdbId());
    }

    @Test
    public void testGetSingleMovieNotFound() {
        when(movieService.findMovieByImdbId("tt1234567")).thenReturn(Optional.empty());

        ResponseEntity<Optional<Movie>> responseEntity = movieController.getSingleMovie("tt1234567");
        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        assertEquals(Optional.empty(), responseEntity.getBody());
    }
}
