// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package dev.farhan.movieist.movies;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.bson.types.ObjectId;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.DocumentReference;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Document(collection = "movies")
public class Movie_Movie_d09d4293c0_Test {
    @Id
    private ObjectId id;
    private String imdbId;
    private String title;
    private String releaseDate;
    private String trailerLink;
    private String poster;
    private List<String> backdrops;
    private List<String> genres;
    private List<Review> reviews;

    @Test
    public void testMovieCreation() {
        List<String> backdrops = Arrays.asList("backdrop1", "backdrop2");
        List<String> genres = Arrays.asList("genre1", "genre2");
        Movie movie = new Movie("tt12345", "Test Movie", "2022-01-01", "trailerLink", "poster", backdrops, genres);
        assertEquals("tt12345", movie.getImdbId());
        assertEquals("Test Movie", movie.getTitle());
        assertEquals("2022-01-01", movie.getReleaseDate());
        assertEquals("trailerLink", movie.getTrailerLink());
        assertEquals("poster", movie.getPoster());
        assertEquals(backdrops, movie.getBackdrops());
        assertEquals(genres, movie.getGenres());
    }

    @Test
    public void testMovieCreationWithNoData() {
        Movie movie = new Movie("", "", "", "", "", null, null);
        assertEquals("", movie.getImdbId());
        assertEquals("", movie.getTitle());
        assertEquals("", movie.getReleaseDate());
        assertEquals("", movie.getTrailerLink());
        assertEquals("", movie.getPoster());
        assertNull(movie.getBackdrops());
        assertNull(movie.getGenres());
    }
}
