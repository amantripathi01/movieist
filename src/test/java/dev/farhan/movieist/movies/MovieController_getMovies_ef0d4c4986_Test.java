// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package dev.farhan.movieist.movies;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Optional;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.when;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
public class MovieController_getMovies_ef0d4c4986_Test {

    @InjectMocks
    MovieController movieController;

    @Mock
    MovieService movieService;

    @Test
    public void testGetMovies() {
        List<Movie> mockMovies = new ArrayList<>();
        mockMovies.add(new Movie());
        
        when(movieService.findAllMovies()).thenReturn(mockMovies);

        ResponseEntity<List<Movie>> responseEntity = movieController.getMovies();
        
        assertNotNull(responseEntity);
        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        assertNotNull(responseEntity.getBody());
        assertEquals(1, responseEntity.getBody().size());
    }

    @Test
    public void testGetMovies_NoMovies() {
        List<Movie> mockMovies = new ArrayList<>();
        
        when(movieService.findAllMovies()).thenReturn(mockMovies);

        ResponseEntity<List<Movie>> responseEntity = movieController.getMovies();
        
        assertNotNull(responseEntity);
        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        assertNotNull(responseEntity.getBody());
        assertEquals(0, responseEntity.getBody().size());
    }
}
