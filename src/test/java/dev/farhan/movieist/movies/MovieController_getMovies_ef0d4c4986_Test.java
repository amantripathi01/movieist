// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package dev.farhan.movieist.movies;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.util.List;
import java.util.Optional;
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
public class MovieController_getMovies_ef0d4c4986_Test {

    @InjectMocks
    MovieController movieController;

    @Mock
    MovieService service;

    @Test
    public void testGetMovies() {
        List<Movie> movieList = new ArrayList<>();
        movieList.add(new Movie("tt0111161", "The Shawshank Redemption", "1994", "9.3"));
        movieList.add(new Movie("tt0068646", "The Godfather", "1972", "9.2"));

        when(service.findAllMovies()).thenReturn(movieList);

        ResponseEntity<List<Movie>> responseEntity = movieController.getMovies();

        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        assertEquals(movieList, responseEntity.getBody());
    }

    @Test
    public void testGetMoviesNoContent() {
        List<Movie> movieList = new ArrayList<>();

        when(service.findAllMovies()).thenReturn(movieList);

        ResponseEntity<List<Movie>> responseEntity = movieController.getMovies();

        assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
        assertEquals(movieList, responseEntity.getBody());
    }
}
