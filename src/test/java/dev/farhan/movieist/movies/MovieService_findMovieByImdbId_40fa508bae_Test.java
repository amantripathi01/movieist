// Test generated by RoostGPT for test springMongoDB using AI Type Open AI and AI Model gpt-4

package dev.farhan.movieist.movies;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.Mockito.when;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import java.util.Optional;

@SpringBootTest
public class MovieService_findMovieByImdbId_40fa508bae_Test {

    @MockBean
    private MovieRepository repository;

    @InjectMocks
    private MovieService movieService;

    @Test
    public void testFindMovieByImdbId_Success() {
        Movie movie = new Movie("tt1234567"); // Assuming Movie has a constructor that takes an imdbId
        Optional<Movie> expected = Optional.of(movie);
        when(repository.findMovieByImdbId("tt1234567")).thenReturn(expected);
        Optional<Movie> actual = movieService.findMovieByImdbId("tt1234567");
        assertEquals(expected, actual);
    }

    @Test
    public void testFindMovieByImdbId_NotFound() {
        when(repository.findMovieByImdbId("tt7654321")).thenReturn(Optional.empty());
        Optional<Movie> actual = movieService.findMovieByImdbId("tt7654321");
        assertTrue(actual.isEmpty());
    }
}
